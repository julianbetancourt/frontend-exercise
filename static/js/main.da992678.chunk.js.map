{"version":3,"sources":["api/planets.ts","components/Header/logo.svg","components/Header/Header.styles.ts","components/Header/Header.tsx","components/Pagination/Pagination.styles.ts","components/Pagination/Pagination.tsx","components/PlanetCard/PlanetCard.styles.ts","components/PlanetCard/PlanetCard.tsx","components/PlanetCard/PlanetsContainer.tsx","components/Searchbar/SearchBar.styles.ts","components/Searchbar/SearchBar.tsx","components/Sorter/Sorter.styles.ts","components/Sorter/Sorter.tsx","components/App/App.styles.ts","components/App/App.tsx","components/App/NoPlanets.tsx","hooks/use-planets.ts","reportWebVitals.js","utils/styles.ts","index.tsx"],"names":["PLANETS_BASE_URL","a","page","axios","params","res","data","Error","Planets","getAll","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","fillRule","d","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","ForwardRef","StyledHeader","styled","header","p","theme","screenBreaks","lg","HeaderContainer","div","Header","PaginationContainer","PaginationButton","button","enabled","Pagination","currentPage","hasPrevious","hasNext","setCurrentPage","setSearchValue","searchValue","queryClient","useQueryClient","useEffect","prefetchQuery","staleTime","className","onClick","event","Card","md","CardTitle","h3","Stat","ol","StatName","StatValue","span","CardsContainer","ul","Button","isReviewed","css","PlanetCard","planet","onReviewClick","name","diameter","climate","population","terrain","url","data-testid","PlanetsContainer","planets","useState","reviewedPlanets","setReviewedPlanets","reviewed","map","includes","Input","input","SearchBar","type","placeholder","value","onChange","e","StyledSorter","Sorter","sorter","setSorter","SortValues","none","Main","main","Text","NoPlanets","error","isLoading","App","useQuery","retry","filteredPlanets","useMemo","sortBy","newp","filter","toLowerCase","sort","b","Number","getFilteredPlanets","results","previous","Boolean","next","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","buttonStyles","globalStyles","GlobalStyle","createGlobalStyle","reset","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.da992678.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst PLANETS_BASE_URL = \"https://swapi.dev\"\n\nasync function getAll({ page }: { page: number }) {\n  try {\n    const res = await axios(`${PLANETS_BASE_URL}/api/planets`, {\n      params: {\n        page,\n      },\n    })\n\n    return res.data\n  } catch (err) {\n    throw new Error(`There was an error getting the planets for page ${page}`)\n  }\n}\n\nexport const Planets = { getAll }\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#fff\",\n  fillRule: \"evenodd\",\n  d: \"M77.175 21.426c0 .541-.154.967-.772.967-.62 0-.774-.426-.774-.967V6.575c0-.503.154-.967.774-.967.618 0 .772.464.772.967v5.861h6.575V7.348C83.75 2.514 81.081 0 76.286 0c-4.796 0-7.465 2.514-7.465 7.348v13.304c0 4.795 2.669 7.348 7.465 7.348 4.795 0 7.503-2.553 7.503-7.348v-6.103h-6.614v6.877zm20.202-8.006L100.626.465h-6.574l-2.243 10.557V.465h-6.846v27.071h6.846V17.481l2.165 10.055h6.884L97.377 13.42zM60.88 21.348c0 .619-.155 1.122-.851 1.122s-.89-.503-.89-1.122V.703h-6.845v20.103c0 4.68 2.746 7.194 7.657 7.194 4.951 0 7.697-2.514 7.697-7.194V.703H60.88v20.645zm-39.774-6.576l-2.535-7.635h-4.517v20.399h5.332V19.96l2.623 7.576h4.429V7.137h-5.332v7.635zM7.169 22.378c0 .437-.116.816-.67.816-.524 0-.67-.379-.67-.816V12.266c0-.437.146-.786.67-.786.554 0 .67.349.67.786v10.112zM6.499 6.73C2.361 6.73 0 8.828 0 12.937v8.771c0 4.109 2.361 6.236 6.499 6.236s6.498-2.127 6.498-6.236v-8.771c0-4.109-2.36-6.207-6.498-6.207zm38.06 4.718c0 .619-.194 1.16-.929 1.16h-.387V5.762h.387c.696 0 .929.503.929 1.161v4.525zm6.728 8.199c0-2.089-.85-3.636-2.513-4.564 1.663-.889 2.513-2.359 2.513-4.563V6.691c0-4.022-2.32-6.226-7.231-6.226H24.438v5.607h3.596v21.464h6.807V6.072h1.596v21.464h6.806v-9.591h.387c.696 0 .929.503.929 1.16v5.067c0 1.315.077 2.668.347 3.364h6.73c-.232-.851-.349-2.166-.349-3.364v-4.525z\"\n});\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 101,\n    height: 28,\n    viewBox: \"0 0 101 28\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.c483d810.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\"\n\nexport const StyledHeader = styled.header`\n  background: #000;\n  height: 70px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 20px;\n  @media (min-width: ${(p) => p.theme.screenBreaks.lg}) {\n    justify-content: start;\n  }\n`\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n\n  & > svg {\n    max-width: 180px;\n    height: auto;\n    margin-right: 5px;\n  }\n\n  & > span {\n    text-transform: uppercase;\n    align-self: flex-end;\n    font-size: 0.8rem;\n  }\n`\n","import React from \"react\"\nimport { ReactComponent as Logo } from \"./logo.svg\"\nimport { HeaderContainer, StyledHeader } from \"./Header.styles\"\n\nexport function Header() {\n  return (\n    <StyledHeader>\n      <HeaderContainer>\n        <Logo />\n        <span>Planets</span>\n      </HeaderContainer>\n    </StyledHeader>\n  )\n}\n","import styled from \"styled-components\"\n\nexport const PaginationContainer = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  & > .pagination__indicator {\n    color: white;\n    margin-bottom: 10px;\n  }\n`\n\nexport const PaginationButton = styled.button<{ enabled: boolean }>`\n  opacity: ${(p) => (p.enabled ? \"1\" : \"0.8\")};\n  cursor: ${(p) => (p.enabled ? \"pointer\" : \"default\")};\n  &:hover {\n    background: ${(p) => (p.enabled ? \"#1a344a\" : \"steelblue\")};\n  }\n`\n","import React, { Dispatch, SetStateAction, useEffect } from \"react\"\nimport { useQueryClient } from \"react-query\"\nimport { Planets } from \"../../api/planets\"\nimport { PaginationButton, PaginationContainer } from \"./Pagination.styles\"\n\ninterface Props {\n  currentPage: number\n  hasPrevious: boolean\n  hasNext: boolean\n  setCurrentPage: Dispatch<SetStateAction<number>>\n  setSearchValue: Dispatch<SetStateAction<string>>\n  searchValue: string\n}\n\nexport function Pagination({\n  currentPage,\n  hasPrevious,\n  hasNext,\n  setCurrentPage,\n  searchValue,\n  setSearchValue,\n}: Props) {\n  const queryClient = useQueryClient()\n\n  useEffect(() => {\n    // Very likely the user will click on next\n    // so we can prefetch the data for the upcoming page\n    // and make it look faster ⚡\n    queryClient.prefetchQuery(\n      [\"planets\", currentPage + 1],\n      () => Planets.getAll({ page: currentPage + 1 }),\n      {\n        staleTime: 10000,\n      }\n    )\n  }, [currentPage, queryClient])\n\n  return (\n    <PaginationContainer>\n      <span className=\"pagination__indicator\">Current page: {currentPage}</span>\n      <div>\n        <PaginationButton\n          onClick={(event) => {\n            setSearchValue(\"\")\n            if (hasPrevious) {\n              setCurrentPage((page) => page - 1)\n            }\n          }}\n          enabled={hasPrevious}\n        >\n          Back\n        </PaginationButton>\n        <PaginationButton\n          enabled={hasNext}\n          onClick={(event) => {\n            setSearchValue(\"\")\n            if (hasNext) {\n              setCurrentPage((page) => page + 1)\n            }\n          }}\n        >\n          Next\n        </PaginationButton>\n      </div>\n    </PaginationContainer>\n  )\n}\n","import styled, { css } from \"styled-components\"\n\nexport const Card = styled.div`\n  background: #fff;\n  padding: 15px 20px;\n  width: 100%;\n  border-radius: 5px;\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n\n  button {\n    margin-top: auto;\n  }\n\n  @media (min-width: ${(p) => p.theme.screenBreaks.md}) {\n    width: 250px;\n    margin: 0 10px 15px;\n  }\n\n  @media (min-width: ${(p) => p.theme.screenBreaks.lg}) {\n    margin: 0 8px 15px;\n  }\n`\n\nexport const CardTitle = styled.h3`\n  font-size: 1.3rem;\n  font-weight: 700;\n  margin-bottom: 10px;\n`\n\nexport const Stat = styled.ol`\n  display: flex;\n  margin-bottom: 10px;\n  width: 100%;\n`\n\nexport const StatName = styled.div`\n  color: #949bac;\n  width: 100px;\n  font-weight: 700;\n  word-wrap: break-word;\n  @media (min-width: ${(p) => p.theme.screenBreaks.md}) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n`\n\nexport const StatValue = styled.span`\n  width: 50%;\n  @media (min-width: ${(p) => p.theme.screenBreaks.md}) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n`\n\nexport const StatsContainer = styled.ul``\n\nexport const CardsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media (min-width: ${(p) => p.theme.screenBreaks.md}) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n\n  @media (min-width: ${(p) => p.theme.screenBreaks.lg}) {\n    width: 1100px;\n    justify-content: end;\n  }\n`\n\nexport const Button = styled.button<{ isReviewed: boolean }>`\n  ${(p) =>\n    p.isReviewed &&\n    css`\n      opacity: 0.8;\n      cursor: default;\n    `}\n`\n","import { Planet } from \"../../interfaces/Planet\"\nimport {\n  Button,\n  Card,\n  CardTitle,\n  Stat,\n  StatName,\n  StatValue,\n} from \"./PlanetCard.styles\"\n\ninterface Props {\n  planet: Planet\n  isReviewed?: boolean\n  onReviewClick: (url: string) => void\n}\n\nexport function PlanetCard({\n  planet,\n  isReviewed = false,\n  onReviewClick,\n}: Props) {\n  const { name, diameter, climate, population, terrain, url } = planet\n\n  return (\n    <Card>\n      <CardTitle>{name}</CardTitle>\n      <ul>\n        <Stat>\n          <StatName>Diameter:</StatName>\n          <StatValue>{diameter}</StatValue>\n        </Stat>\n        <Stat>\n          <StatName>Climate:</StatName>\n          <StatValue>{climate}</StatValue>\n        </Stat>\n        <Stat>\n          <StatName>Population:</StatName>\n          <StatValue data-testid=\"population-value\">{population}</StatValue>\n        </Stat>\n        <Stat>\n          <StatName>Terrain:</StatName>\n          <StatValue>{terrain}</StatValue>\n        </Stat>\n      </ul>\n      <Button\n        onClick={() => !isReviewed && onReviewClick(url)}\n        isReviewed={isReviewed}\n      >\n        {isReviewed ? \"Reviewed!\" : \"Mark as reviewed\"}\n      </Button>\n    </Card>\n  )\n}\n","import { PlanetCard } from \"./PlanetCard\"\nimport { CardsContainer } from \"./PlanetCard.styles\"\nimport { Planet } from \"../../interfaces/Planet\"\nimport { useState } from \"react\"\n\ninterface Props {\n  planets: Planet[]\n}\nexport function PlanetsContainer({ planets }: Props) {\n  const [reviewedPlanets, setReviewedPlanets] = useState<Planet[\"url\"][]>([])\n\n  function onReviewClick(url: Planet[\"url\"]) {\n    setReviewedPlanets((reviewed) => [...reviewed, url])\n  }\n  return (\n    <CardsContainer>\n      {planets.map((planet: Planet) => (\n        <PlanetCard\n          key={planet.url}\n          planet={planet}\n          onReviewClick={onReviewClick}\n          isReviewed={reviewedPlanets.includes(planet.url)}\n        />\n      ))}\n    </CardsContainer>\n  )\n}\n","import styled from \"styled-components\"\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 40px;\n  margin: 10px 0 30px;\n  @media (min-width: ${(p) => p.theme.screenBreaks.lg}) {\n    width: 400px;\n    margin: 30px 0 30px;\n  }\n`\n","import React, { Dispatch, SetStateAction } from \"react\"\nimport { Input } from \"./SearchBar.styles\"\n\ninterface Props {\n  searchValue: string\n  setSearchValue: Dispatch<SetStateAction<string>>\n}\n\nexport function SearchBar({ searchValue, setSearchValue }: Props) {\n  return (\n    <Input\n      type=\"text\"\n      placeholder=\"Search by name...\"\n      value={searchValue}\n      onChange={(e) => setSearchValue(e.target.value)}\n    />\n  )\n}\n","import styled from \"styled-components\"\n\nexport const StyledSorter = styled.div`\n  color: white;\n  margin-bottom: 20px;\n`\n","import React, { Dispatch, SetStateAction } from \"react\"\nimport { SortValues } from \"../App/App\"\nimport { StyledSorter } from \"./Sorter.styles\"\n\ninterface Props {\n  sorter: SortValues\n  setSorter: Dispatch<SetStateAction<SortValues>>\n}\n\nexport function Sorter({ sorter, setSorter }: Props) {\n  return (\n    <StyledSorter>\n      Sort by\n      <select\n        value={sorter}\n        onChange={(e) => {\n          setSorter(e.target.value as SortValues)\n        }}\n        data-testid=\"sorter-select\"\n      >\n        <option value={SortValues.none} data-testid={SortValues.none}>\n          None\n        </option>\n        <option value={SortValues.diameter} data-testid={SortValues.diameter}>\n          Diameter\n        </option>\n        <option\n          value={SortValues.population}\n          data-testid={SortValues.population}\n        >\n          population\n        </option>\n      </select>\n    </StyledSorter>\n  )\n}\n","import styled from \"styled-components\"\n\nexport const Main = styled.main`\n  width: 90%;\n  margin: 0 auto;\n\n  @media (min-width: ${(p) => p.theme.screenBreaks.lg}) {\n    width: 1100px;\n  }\n`\n\nexport const Text = styled.span`\n  color: white;\n`\n","import { useMemo, useState } from \"react\"\nimport { usePlanets } from \"../../hooks/use-planets\"\nimport { Planet } from \"../../interfaces/Planet\"\nimport { Header } from \"../Header/Header\"\nimport { Pagination } from \"../Pagination/Pagination\"\nimport { PlanetsContainer } from \"../PlanetCard/PlanetsContainer\"\nimport { SearchBar } from \"../Searchbar/SearchBar\"\nimport { Sorter } from \"../Sorter/Sorter\"\nimport { Main } from \"./App.styles\"\nimport { NoPlanets } from \"./NoPlanets\"\n\nexport enum SortValues {\n  none = \"none\",\n  population = \"population\",\n  diameter = \"diameter\",\n}\n\ninterface GetPlanets {\n  planets: Planet[]\n  name: string\n  sortBy: SortValues\n}\n\nfunction getFilteredPlanets({ planets, name, sortBy }: GetPlanets) {\n  if (name === \"\" && sortBy === SortValues.none) return planets\n\n  let newp = planets.filter((planet) =>\n    planet.name.toLowerCase().includes(name.toLowerCase())\n  )\n\n  if (sortBy !== SortValues.none) {\n    newp = newp.sort((a, b) => {\n      return Number(a[sortBy]) - Number(b[sortBy])\n    })\n  }\n\n  return newp\n}\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sorter, setSorter] = useState<SortValues>(SortValues.none)\n\n  const { data, error, isLoading } = usePlanets(currentPage)\n\n  const filteredPlanets = useMemo(\n    () =>\n      getFilteredPlanets({\n        planets: data?.results ?? [],\n        name: searchValue,\n        sortBy: sorter,\n      }),\n    [searchValue, data?.results, sorter]\n  )\n\n  return (\n    <div>\n      <Header />\n\n      <Main>\n        <SearchBar searchValue={searchValue} setSearchValue={setSearchValue} />\n        <Sorter sorter={sorter} setSorter={setSorter} />\n        <Pagination\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          hasPrevious={data?.previous || false}\n          hasNext={Boolean(data?.next) || false}\n          searchValue={searchValue}\n          setSearchValue={setSearchValue}\n        />\n        {isLoading || error ? (\n          <NoPlanets error={error?.message ?? null} isLoading={isLoading} />\n        ) : (\n          <PlanetsContainer planets={filteredPlanets} />\n        )}\n      </Main>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport { Text } from \"./App.styles\"\n\ninterface Props {\n  error?: string | null\n  isLoading: boolean\n}\n\nexport function NoPlanets({ error, isLoading }: Props) {\n  if (isLoading) {\n    return <Text>Loading...</Text>\n  }\n\n  if (error) {\n    return <Text>{error}</Text>\n  }\n\n  return <Text>There has been an error, try again!</Text>\n}\n","import { useQuery } from \"react-query\"\nimport { Planets } from \"../api/planets\"\nimport { PlanetsRequest } from \"../interfaces/Planet\"\n\nexport function usePlanets(page: number) {\n  return useQuery<PlanetsRequest, { message: string }>(\n    [\"planets\", page],\n    () => Planets.getAll({ page }),\n    {\n      enabled: true,\n      retry: false,\n    }\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { css } from \"styled-components\"\n\nconst buttonStyles = css`\n  background: steelblue;\n  cursor: pointer;\n  border: 0;\n  padding: 10px 25px;\n  margin-right: 20px;\n  color: white;\n  border-radius: 5px;\n  &:hover {\n    background: \"#1a344a\";\n  }\n`\n\nexport const globalStyles = css`\n  * {\n    box-sizing: border-box;\n  }\n  html {\n    font-family: Helvetica, sans-serif;\n  }\n  body {\n    background: #3b4f63;\n  }\n  button {\n    ${buttonStyles}\n  }\n`\n\nexport const screenBreaks = {\n  md: \"600px\",\n  lg: \"1237px\",\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { QueryClient, QueryClientProvider } from \"react-query\"\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\"\nimport reset from \"styled-reset\"\n\nimport App from \"./components/App/App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { globalStyles, screenBreaks } from \"./utils/styles\"\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  ${globalStyles}\n`\n\nconst queryClient = new QueryClient()\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={{ screenBreaks }}>\n      <QueryClientProvider client={queryClient}>\n        <GlobalStyle />\n        <App />\n      </QueryClientProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}